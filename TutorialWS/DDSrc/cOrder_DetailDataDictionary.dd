Use DataDict.pkg

Open Order_Detail
Open PARAM
Open Order
Open Product

Register_Object oOrder_DetailWebLookup

Class cOrder_DetailDataDictionary is a DataDictionary
    
    Procedure Construct_Object
        Forward Send Construct_Object
        Set Main_File to Order_Detail.File_Number

      Set Add_Server_File to Order.File_Number
      Set Add_Server_File to Product.File_Number

      Set Add_System_File to PARAM.File_Number DD_Lock_On_All

        Set Foreign_Field_Option DD_KEYFIELD DD_NOPUT to True
        Set Foreign_Field_Option DD_KEYFIELD DD_FINDREQ to True
        Set Foreign_Field_Option DD_INDEXFIELD DD_NOPUT to True
        Set Foreign_Field_Option DD_DEFAULT DD_DISPLAYONLY to True

      Set Field_Auto_Increment Field Order_Detail.Order_Detail_Id to File_Field PARAM.Order_Detail_ID
      Set Key_Field_State Field Order_Detail.Order_Detail_Id to True
      Set Field_WebPrompt_Object Field Order_Detail.Order_Detail_Id to oOrder_DetailWebLookup

      Set Field_WebPrompt_Object Field Order_Detail.ProductId to oOrder_DetailWebLookup

    End_Procedure
    
    Procedure Update
      Forward Send Update
      Move (Order_Detail.Amount * Product.Price) to Order_Detail.Total
      Send AdjustBalance Order_Detail.Total
    End_Procedure
//    
    Procedure AdjustBalance Number nTotal
//      Move 0 to Order.Price
      Add nTotal to Order.Price          //The reason we're just adding instead of clearing first is to calculate the total even for other items in the grid
    End_Procedure
    
    Procedure AdjustDisplayTotal Integer iField String sValue
      Integer iQty
      Number nAmount
      
      Get Field_Current_Value Field Order_Detail.Amount to iQty
      Get Field_Current_Value Field Product.Price to nAmount
      
      Set Field_Current_Value Field Order_Detail.Total to (iQty * nAmount)
    End_Procedure

End_Class

#IFDEF Is$WebApp
Use Order_DetailWebLookup.wo
#ELSE
#ENDIF
